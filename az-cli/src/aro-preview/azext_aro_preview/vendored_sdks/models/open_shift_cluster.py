# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class OpenShiftCluster(Model):
    """OpenShiftCluster represents an Azure Red Hat OpenShift cluster.

    Variables are only populated by the server, and will be ignored when
    sending a request.

    :ivar id: The resource ID (immutable).
    :vartype id: str
    :ivar name: The resource name (immutable).
    :vartype name: str
    :ivar type: The resource type (immutable).
    :vartype type: str
    :param location: The resource location (immutable).
    :type location: str
    :param tags: The resource tags.
    :type tags: dict[str, str]
    :param provisioning_state: The cluster provisioning state (immutable).
     Possible values include: 'Creating', 'Deleting', 'Failed', 'Succeeded',
     'Updating'
    :type provisioning_state: str or ~redhatopenshift.models.enum
    :param service_principal_profile: The cluster service principal profile.
    :type service_principal_profile:
     ~redhatopenshift.models.ServicePrincipalProfile
    :param network_profile: The cluster network profile.
    :type network_profile: ~redhatopenshift.models.NetworkProfile
    :param master_profile: The cluster master profile.
    :type master_profile: ~redhatopenshift.models.MasterProfile
    :param worker_profiles: The cluster worker profiles.
    :type worker_profiles: list[~redhatopenshift.models.WorkerProfile]
    :param apiserver_url: The URL to access the cluster API server
     (immutable).
    :type apiserver_url: str
    :param console_url: The URL to access the cluster console (immutable).
    :type console_url: str
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True},
        'type': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'location': {'key': 'location', 'type': 'str'},
        'tags': {'key': 'tags', 'type': '{str}'},
        'provisioning_state': {'key': 'properties.provisioningState', 'type': 'str'},
        'service_principal_profile': {'key': 'properties.servicePrincipalProfile', 'type': 'ServicePrincipalProfile'},
        'network_profile': {'key': 'properties.networkProfile', 'type': 'NetworkProfile'},
        'master_profile': {'key': 'properties.masterProfile', 'type': 'MasterProfile'},
        'worker_profiles': {'key': 'properties.workerProfiles', 'type': '[WorkerProfile]'},
        'apiserver_url': {'key': 'properties.apiserverUrl', 'type': 'str'},
        'console_url': {'key': 'properties.consoleUrl', 'type': 'str'},
    }

    def __init__(self, location=None, tags=None, provisioning_state=None, service_principal_profile=None, network_profile=None, master_profile=None, worker_profiles=None, apiserver_url=None, console_url=None):
        super(OpenShiftCluster, self).__init__()
        self.id = None
        self.name = None
        self.type = None
        self.location = location
        self.tags = tags
        self.provisioning_state = provisioning_state
        self.service_principal_profile = service_principal_profile
        self.network_profile = network_profile
        self.master_profile = master_profile
        self.worker_profiles = worker_profiles
        self.apiserver_url = apiserver_url
        self.console_url = console_url
